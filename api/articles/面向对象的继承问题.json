{"title":"面向对象的继承问题","slug":"面向对象的继承问题","date":"2016-08-09T16:28:55.000Z","updated":"2017-06-29T01:14:13.627Z","comments":true,"excerpt":"<h4 id=\"面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例-，让您快速消化知识点。\"><a href=\"#面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例-，让您快速消化知识点。\" class=\"headerlink\" title=\"面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例 ，让您快速消化知识点。\"></a>面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例 ，让您快速消化知识点。</h4>","content":"<h4 id=\"面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例-，让您快速消化知识点。\"><a href=\"#面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例-，让您快速消化知识点。\" class=\"headerlink\" title=\"面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例 ，让您快速消化知识点。\"></a>面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例 ，让您快速消化知识点。</h4><a id=\"more\"></a>\n<h5 id=\"我们定义了以下一串代码-一所中国的学校，一个喜欢读书的教师\"><a href=\"#我们定义了以下一串代码-一所中国的学校，一个喜欢读书的教师\" class=\"headerlink\" title=\"我们定义了以下一串代码:一所中国的学校，一个喜欢读书的教师\"></a>我们定义了以下一串代码:<code>一所中国的学校，一个喜欢读书的教师</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var shcool = &#123;</div><div class=\"line\">\tnation : &quot;china&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">var teacher = &#123;</div><div class=\"line\">\tloving : &quot;reading&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"但是我们希望建立两者的联系，实现：-一个喜欢读书的老师-在一所中国的学校里面\"><a href=\"#但是我们希望建立两者的联系，实现：-一个喜欢读书的老师-在一所中国的学校里面\" class=\"headerlink\" title=\"但是我们希望建立两者的联系，实现： 一个喜欢读书的老师 在一所中国的学校里面\"></a>但是我们希望建立两者的联系，实现： <code>一个喜欢读书的老师 在一所中国的学校里面</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function object(test) &#123;</div><div class=\"line\">　　　　function F() &#123;&#125;</div><div class=\"line\">　　　　F.prototype = test;</div><div class=\"line\">　　　　return new F();</div><div class=\"line\">&#125;</div><div class=\"line\">var school=&#123;</div><div class=\"line\">\tnation:&quot;china&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">var teacher = object(school);</div><div class=\"line\">teacher.loving=&quot;reading&quot;</div><div class=\"line\">alert(teacher.loving)//&quot;reading&quot;</div><div class=\"line\">alert(teacher.nation)//&quot;china&quot;</div></pre></td></tr></table></figure>\n<p>执行结果 如我注释写的那样，完美继承父级的的属性。</p>\n<h4 id=\"这就是json格式的发明人Douglas-Crockford提出的一个object-函数。\"><a href=\"#这就是json格式的发明人Douglas-Crockford提出的一个object-函数。\" class=\"headerlink\" title=\"这就是json格式的发明人Douglas Crockford提出的一个object()函数。\"></a>这就是json格式的发明人Douglas Crockford提出的一个object()函数。</h4><p>object() 函数，其实只做一件事，就是把子对象的prototype属性，指向父对象，从而使得子对象与父对象连在一起。</p>\n<h3 id=\"除了使用”prototype链”以外，还有另一种思路：把父对象的属性，全部拷贝给子对象，也能实现继承。\"><a href=\"#除了使用”prototype链”以外，还有另一种思路：把父对象的属性，全部拷贝给子对象，也能实现继承。\" class=\"headerlink\" title=\"除了使用”prototype链”以外，还有另一种思路：把父对象的属性，全部拷贝给子对象，也能实现继承。\"></a>除了使用”prototype链”以外，还有另一种思路：把父对象的属性，全部拷贝给子对象，也能实现继承。</h3><p>下面就是一个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">function clone(obj) &#123;</div><div class=\"line\">\tfunction F() &#123;&#125;</div><div class=\"line\">\tF.prototype=obj;</div><div class=\"line\">\treturn new F()</div><div class=\"line\">&#125;</div><div class=\"line\">var parent=&#123;</div><div class=\"line\">\tnation:&quot;china&quot;,</div><div class=\"line\">\tbirth:function () &#123;</div><div class=\"line\">\t\treturn [&quot;北京&quot;,&quot;上海&quot;,&quot;广州&quot;]</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">var Jay = clone(parent)</div><div class=\"line\">Jay.job=&quot;doctor&quot;</div><div class=\"line\">Jay.birth=parent.birth()</div><div class=\"line\">Jay.birth.push(&quot;台湾&quot;)</div><div class=\"line\">alert(Jay.job)//doctor</div><div class=\"line\">alert(Jay.nation)//china</div><div class=\"line\">alert(Jay.birth.length)//4</div><div class=\"line\">alert(parent.birth().length)//3</div></pre></td></tr></table></figure>\n<h4 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h4><p>此处的clone()其实也是一种新的函数，只不过和上面的object()是同一过程。</p>\n<p>这里我们实现了 全部复制(parent)父对象的所有(nation)属性以及(birth)方法</p>\n<p>并且实现了一个效果：对 子对象的方法进行修改，并不会影响父对象的方法。</p>\n<h2 id=\"拷贝数据类型，这就是早期jQuery实现继承的方法。俗称浅拷贝\"><a href=\"#拷贝数据类型，这就是早期jQuery实现继承的方法。俗称浅拷贝\" class=\"headerlink\" title=\"拷贝数据类型，这就是早期jQuery实现继承的方法。俗称浅拷贝\"></a>拷贝数据类型，这就是早期jQuery实现继承的方法。俗称浅拷贝</h2><h2 id=\"与之相匹配的还有深拷贝\"><a href=\"#与之相匹配的还有深拷贝\" class=\"headerlink\" title=\"与之相匹配的还有深拷贝\"></a>与之相匹配的还有深拷贝</h2><p>所谓”深拷贝”，就是能够实现真正意义上的数组和对象的拷贝。它的实现并不难，不过本人并没有理解，不敢擅自分析，恐误人子弟，此处贴上demo：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">function deepCopy(p, c) &#123;</div><div class=\"line\">　　　　var c = c || &#123;&#125;;</div><div class=\"line\">　　　　for (var i in p) &#123;</div><div class=\"line\">　　　　　　if (typeof p[i] === &apos;object&apos;) &#123;</div><div class=\"line\">　　　　　　　　c[i] = (p[i].constructor === Array) ? [] : &#123;&#125;;</div><div class=\"line\">　　　　　　　　deepCopy(p[i], c[i]);</div><div class=\"line\">　　　　　　&#125; else &#123;</div><div class=\"line\">　　　　　　　　　c[i] = p[i];</div><div class=\"line\">　　　　　　&#125;</div><div class=\"line\">　　　　&#125;</div><div class=\"line\">　　　　return c;</div><div class=\"line\">　　&#125;</div><div class=\"line\">　　//调用方法：</div><div class=\"line\">　　var Doctor = deepCopy(Chinese);</div><div class=\"line\">　　//现在，给父对象加一个属性，值为数组。然后，在子对象上修改这个属性：</div><div class=\"line\">　　Chinese.birthPlaces = [&apos;北京&apos;,&apos;上海&apos;,&apos;香港&apos;];</div><div class=\"line\">　　Doctor.birthPlaces.push(&apos;厦门&apos;);</div><div class=\"line\">　　alert(Doctor.birthPlaces); //北京, 上海, 香港, 厦门</div><div class=\"line\">　　alert(Chinese.birthPlaces); //北京, 上海, 香港</div></pre></td></tr></table></figure>\n<h2 id=\"这就是目前jQuery库使用的继承方法\"><a href=\"#这就是目前jQuery库使用的继承方法\" class=\"headerlink\" title=\"这就是目前jQuery库使用的继承方法\"></a>这就是目前jQuery库使用的继承方法</h2><p>很抱歉，本人没能完成学习的深入，就写了此篇博文，希望小伙伴在留言区留下您的想法，和我一起分享学习的经历或是经验好么？</p>\n<p><em>Yours Sincerely SunPing</em></p>\n","categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]}