{"title":"React Native遇到的坑-持续更新","slug":"React-Native遇到的坑-持续更新","date":"2016-12-13T15:29:28.000Z","updated":"2017-06-29T01:14:13.580Z","comments":true,"excerpt":"<p>因为工作需要，需要用react-native去开发一款APP，在学习时间如此珍贵的前提下，竟然发生了N多开发前的准备问题。本博客适合小白遇到的问题，希望您与我交流。</p>","content":"<p>因为工作需要，需要用react-native去开发一款APP，在学习时间如此珍贵的前提下，竟然发生了N多开发前的准备问题。本博客适合小白遇到的问题，希望您与我交流。</p>\n<a id=\"more\"></a>\n<h1 id=\"问题1-代码更新后，reload不更新\"><a href=\"#问题1-代码更新后，reload不更新\" class=\"headerlink\" title=\"问题1:代码更新后，reload不更新\"></a>问题1:代码更新后，reload不更新</h1><p>我们在真机上面调试是需要实时更新代码，让代码生效的。一般来说我们会设置<code>Enable Hot Reloading</code>【轻轻摇晃手机就可以设置】。但是有时候我们修改了代码，在手机上并不会实时更新代码。浪费太多的时间在关闭开启包服务器，很是头疼</p>\n<h3 id=\"解决方法打开文件：\"><a href=\"#解决方法打开文件：\" class=\"headerlink\" title=\"解决方法打开文件：\"></a>解决方法打开文件：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">你的app名称\\node_modules\\react-native\\node_modules\\node-haste\\lib\\FileWatcher\\index.js</div></pre></td></tr></table></figure>\n<ul>\n<li>修改变量<code>MAX_WAIT_TIME：</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// var MAX_WAIT_TIME = 120000;</div><div class=\"line\">var MAX_WAIT_TIME = 360000;</div></pre></td></tr></table></figure>\n<ul>\n<li>修改部分代码</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">key: &apos;_createWatcher&apos;,</div><div class=\"line\">    value: function _createWatcher(rootConfig) &#123;</div><div class=\"line\">      var watcher = new WatcherClass(rootConfig.dir, &#123;</div><div class=\"line\">        glob: rootConfig.globs,</div><div class=\"line\">        dot: false</div><div class=\"line\">      &#125;);</div><div class=\"line\"></div><div class=\"line\">      return new Promise(function (resolve, reject) &#123;</div><div class=\"line\"></div><div class=\"line\">        const rejectTimeout = setTimeout(function() &#123;</div><div class=\"line\">          reject(new Error([</div><div class=\"line\">            &apos;Watcher took too long to load&apos;,</div><div class=\"line\">            &apos;Try running `watchman version` from your terminal&apos;,</div><div class=\"line\">            &apos;https://facebook.github.io/watchman/docs/troubleshooting.html&apos;,</div><div class=\"line\">          ].join(&apos;\\n&apos;)));</div><div class=\"line\">        &#125;, MAX_WAIT_TIME);</div><div class=\"line\"></div><div class=\"line\">        watcher.once(&apos;ready&apos;, function () &#123;</div><div class=\"line\">          clearTimeout(rejectTimeout);</div><div class=\"line\">          resolve(watcher);</div><div class=\"line\">        &#125;);</div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>通过这么几步，就可以实现即时reload预览（前提是环境变量配置正确）。</p>\n<ul>\n<li>打开白屏<br><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016080803.png\" alt=\"img\"><br>解决方法：开启 当前应用的 <em>悬浮窗</em> 权限。具体操作方法 百度之<br>（MIUI系统 需要在此基础上<code>关闭MIUI优化</code>–一种排版优化功能，关闭就好）</li>\n</ul>\n<ul>\n<li>注意一下RN所支持的最低iOS和Android版本，如果不是下面的 报错就不用纠结了<ul>\n<li>Android &gt;= 4.1 (API 16)</li>\n<li>iOS &gt;= 7.0</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"报错信息解读\"><a href=\"#报错信息解读\" class=\"headerlink\" title=\"报错信息解读\"></a>报错信息解读</h2><ul>\n<li>Unable to download JS bundle<br><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016080802.png\" alt=\"img\"></li>\n</ul>\n<p>首先 确认你的服务器是否正常开启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">react-native start</div></pre></td></tr></table></figure>\n<p>其次确定 8081端口 是否正常打开</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb reverse tcp:8081 tcp:8081</div></pre></td></tr></table></figure>\n<p>注意点：PC和手机连接到同一个wifi环境下，否则不能访问</p>\n<hr>\n<ul>\n<li>Invariant Violation:Application XXXX has not been registered.</li>\n</ul>\n<p>请确保index.ios.js中的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">AppRegistry.registerComponent(&apos;项目名&apos;,() =&gt; ...);</div></pre></td></tr></table></figure>\n<p>与appDelegate.m中的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">RCTRootView*rootView = [[RCTRootViewalloc]initWithBundleURL:jsCodeLocation</div><div class=\"line\"></div><div class=\"line\">moduleName:@&quot;项目名&quot; launchOptions:launchOptions];</div></pre></td></tr></table></figure>\n<p>或是MainActivity.java中的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mReactRootView.startReactApplication(mReactInstanceManager, &quot;项目名&quot;, null);</div></pre></td></tr></table></figure>\n<p>都保持一致。</p>\n<hr>\n<ul>\n<li>使用Image时报错：You are trying to render the global Image variable as a React element. You probably forgot to require Image</li>\n</ul>\n<p>由于React的Image组件和全局的Image对象重名，所以使用Image组件时一定要记得在文件开头正确引入React的Image组件。</p>\n","categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]}