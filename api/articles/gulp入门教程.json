{"title":"gulp入门教程","slug":"gulp入门教程","date":"2016-06-08T05:19:51.000Z","updated":"2017-06-29T01:14:13.580Z","comments":true,"excerpt":"<h2 id=\"自动化构建工具的使用\"><a href=\"#自动化构建工具的使用\" class=\"headerlink\" title=\"自动化构建工具的使用\"></a>自动化构建工具的使用</h2><h4 id=\"简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱\"><a href=\"#简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱\" class=\"headerlink\" title=\"简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱\"></a>简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱</h4><p><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016080810.png\" alt=\"img\"></p>","content":"<h2 id=\"自动化构建工具的使用\"><a href=\"#自动化构建工具的使用\" class=\"headerlink\" title=\"自动化构建工具的使用\"></a>自动化构建工具的使用</h2><h4 id=\"简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱\"><a href=\"#简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱\" class=\"headerlink\" title=\"简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱\"></a>简而言之，通过配置好task任务，使用强大的插件，管道般的顺畅操作，即可自动构建代码，极大地提高效率，让我们来揭开gulp的神秘面纱</h4><p><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016080810.png\" alt=\"img\"></p>\n<a id=\"more\"></a>\n<h3 id=\"明确目标\"><a href=\"#明确目标\" class=\"headerlink\" title=\"明确目标\"></a>明确目标</h3><h5 id=\"我们能通过gulp做什么？\"><a href=\"#我们能通过gulp做什么？\" class=\"headerlink\" title=\"我们能通过gulp做什么？\"></a>我们能通过gulp做什么？</h5><ul>\n<li>压缩html，css，js 等文件（分别使用 gulp-htmlmin，gulp-cssmin，gulp-jsmin）;</li>\n<li>自动合并同类型文件为一个文件（gulp-concat）;</li>\n<li>更高效的编辑语言（less来编写css，jade来编写html）</li>\n<li>更亲近读者的代码阅读（通过查看package.json的内容 一键配置环境）</li>\n<li>更强大的处理速度（编译速度很快）</li>\n<li>。</li>\n<li>。</li>\n<li>。</li>\n</ul>\n<h3 id=\"了解了这些，让我们来学习这个强大的工具吧\"><a href=\"#了解了这些，让我们来学习这个强大的工具吧\" class=\"headerlink\" title=\"了解了这些，让我们来学习这个强大的工具吧\"></a>了解了这些，让我们来学习这个强大的工具吧</h3><h4 id=\"如何安装？\"><a href=\"#如何安装？\" class=\"headerlink\" title=\"如何安装？\"></a>如何安装？</h4><p>基于nodejs的 gulp 需要您首先 配置好nodejs环境，<a href=\"http://nodejs.cn/download/\" target=\"_blank\" rel=\"external\">nodeJS 传送门</a></p>\n<p>在项目文件夹内，首先初始化npm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<p>接下来全局安装 gulp：（如发生权限不够的情况，在前面添加“sudu”）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp -g --save</div></pre></td></tr></table></figure>\n<p>在package.json所在文件夹内 新建一个”gulpfile.js”此文件是gulp用来编写任务的。</p>\n<p>编辑 <code>&quot;gulpfile.js&quot;</code>，开始第一段gulp的代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var gulp = require(&apos;gulp&apos;);</div><div class=\"line\">gulp.task(&apos;mission1&apos;,function()&#123;</div><div class=\"line\">console.log(&quot;hello gulp&quot;)\t\t</div><div class=\"line\">&#125;)</div><div class=\"line\">gulp.task(&apos;default&apos;,function()&#123;</div><div class=\"line\">console.log(&quot;hello user&quot;)\t\t</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h5 id=\"这时候在终端调用-gulp-mission1-会直接输出-hello-gulp\"><a href=\"#这时候在终端调用-gulp-mission1-会直接输出-hello-gulp\" class=\"headerlink\" title=\"这时候在终端调用 gulp mission1 会直接输出 hello gulp\"></a>这时候在终端调用 <code>gulp mission1</code> 会直接输出 <code>hello gulp</code></h5><p><strong>注意点1：</strong> 这里的 mission1 默认值为 <code>default</code> ，也就是说如果你直接运行 <code>gult</code> 会输出 <code>hello user</code></p>\n<p><strong>注意点2：</strong> 如下面例子，中间为可选，正式调用的时候，执行顺序为：mission2–mission3–mission1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(&apos;mission1&apos;,[&apos;mission2&apos;,&apos;mission3&apos;],function()&#123;</div><div class=\"line\">\tfn();/*你的功能函数写在这里*/</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"Q-如何利用gulp-压缩代码？\"><a href=\"#Q-如何利用gulp-压缩代码？\" class=\"headerlink\" title=\"Q:如何利用gulp 压缩代码？\"></a>Q:如何利用gulp 压缩代码？</h2><h3 id=\"A-以js-为例：首先需要安装-gulp-jsmin-的插件：\"><a href=\"#A-以js-为例：首先需要安装-gulp-jsmin-的插件：\" class=\"headerlink\" title=\"A:以js 为例：首先需要安装 gulp-jsmin 的插件：\"></a>A:以js 为例：首先需要安装 <code>gulp-jsmin</code> 的插件：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp-jsmin --save</div></pre></td></tr></table></figure>\n<p>如何 使用呢？ 举例说明 ：</p>\n<p>local.js的路径为 <code>save/src/js/local.js</code> ,</p>\n<p>我现在需要完成的任务为：讲压缩好的js代码放到 <code>save/desk/js/</code>中；</p>\n<p>按照理解，先找到src 下面的js文件，然后进行压缩，然后选择存放路径；<br><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016051601.png\" alt=\"img\"><br>既然缕清思路，具体怎么实现呢？在gulpfile.js文件中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">var gulp = require(&apos;gulp&apos;);</div><div class=\"line\"></div><div class=\"line\">var jsmin = require(&apos;gulp-jsmin&apos;);</div><div class=\"line\"></div><div class=\"line\">gulp.task(&apos;jsmin&apos;,function()&#123;</div><div class=\"line\"></div><div class=\"line\">gulp.src(&apos;src/js/local.js&apos;)</div><div class=\"line\">\t</div><div class=\"line\">.pipe(jsmin())</div><div class=\"line\">\t\t</div><div class=\"line\">.pipe(gulp.dest(&apos;desk/js/&apos;))</div><div class=\"line\">\t\t</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>接下来 在终端中调用 <code>gulp jsmin</code> 就会在该路径下生成 js 的压缩文件</p>\n<h2 id=\"cssmin，htmlmin-同上\"><a href=\"#cssmin，htmlmin-同上\" class=\"headerlink\" title=\"cssmin，htmlmin 同上\"></a>cssmin，htmlmin 同上</h2><hr>\n<h2 id=\"Q-如何利用gulp编译less并压缩修改名称？\"><a href=\"#Q-如何利用gulp编译less并压缩修改名称？\" class=\"headerlink\" title=\"Q:如何利用gulp编译less并压缩修改名称？\"></a>Q:如何利用gulp编译less并压缩修改名称？</h2><h3 id=\"A-提高了要求，必要需要更多元素（gulp-less-gulp-rename）的加入\"><a href=\"#A-提高了要求，必要需要更多元素（gulp-less-gulp-rename）的加入\" class=\"headerlink\" title=\"A:提高了要求，必要需要更多元素（gulp-less,gulp-rename）的加入\"></a>A:提高了要求，必要需要更多元素（gulp-less,gulp-rename）的加入</h3><p>目标：test.less的路径为 <code>save/src/css/test.less</code> ,</p>\n<p>我现在需要完成的任务为：讲less转译成css并压缩，重新命名的代码放到 <code>save/desk/css/</code>中；<br><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016051602.png\" alt=\"img\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">var gulp = require(&apos;gulp&apos;);</div><div class=\"line\"></div><div class=\"line\">var less = require(&apos;gulp-less&apos;);</div><div class=\"line\"></div><div class=\"line\">var rename = require(&apos;gulp-rename&apos;);</div><div class=\"line\"></div><div class=\"line\">var cssmin = require(&apos;gulp-cssmin&apos;);</div><div class=\"line\"></div><div class=\"line\">gulp.task(&apos;cssgo&apos;,function()&#123;</div><div class=\"line\"></div><div class=\"line\">gulp.src(&apos;src/css/*.less&apos;)</div><div class=\"line\">\t</div><div class=\"line\">.pipe(less())</div><div class=\"line\">\t</div><div class=\"line\">.pipe(cssmin())</div><div class=\"line\">\t</div><div class=\"line\">.pipe(rename(&#123;suffix: &apos;.min&apos;&#125;))</div><div class=\"line\">\t</div><div class=\"line\">.pipe(gulp.dest(&apos;desk/css/&apos;))</div><div class=\"line\">\t</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>最终运行结果为： <code>test.min.css</code></p>\n<h3 id=\"怎么样，你运行成功了么？\"><a href=\"#怎么样，你运行成功了么？\" class=\"headerlink\" title=\"怎么样，你运行成功了么？\"></a>怎么样，你运行成功了么？</h3><p>更多的 知识点 靠你自己去挖掘；希望你看了这篇文档能有所收获！</p>\n<h2 id=\"开启传送门：gulp中文网gulp插件网\"><a href=\"#开启传送门：gulp中文网gulp插件网\" class=\"headerlink\" title=\"开启传送门：gulp中文网gulp插件网\"></a>开启传送门：<a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"external\">gulp中文网</a><a href=\"http://gulpjs.com/plugins/\" target=\"_blank\" rel=\"external\">gulp插件网</a></h2><h3 id=\"感谢您一如既往地支持\"><a href=\"#感谢您一如既往地支持\" class=\"headerlink\" title=\"感谢您一如既往地支持\"></a>感谢您一如既往地支持</h3><p><strong>Yours sincerely SunPing</strong></p>\n","categories":[],"tags":[{"name":"gulp","path":"api/tags/gulp.json"},{"name":"入门","path":"api/tags/入门.json"}]}