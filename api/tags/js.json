{"name":"js","postlist":[{"title":"Get与Post的区别到底是啥","slug":"Get与Post的区别到底是啥","date":"2016-10-29T03:56:20.000Z","updated":"2017-06-29T01:14:13.549Z","comments":true,"path":"api/articles/Get与Post的区别到底是啥.json","excerpt":"<h3 id=\"如果有人问你，GET和POST，有什么区别？你会如何回答？\"><a href=\"#如果有人问你，GET和POST，有什么区别？你会如何回答？\" class=\"headerlink\" title=\"如果有人问你，GET和POST，有什么区别？你会如何回答？\"></a>如果有人问你，GET和POST，有什么区别？你会如何回答？</h3>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"JSONP的实现","slug":"JSONP的实现","date":"2016-10-03T01:10:48.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JSONP的实现.json","excerpt":"<p>JSONP 是<code>解决跨域问题</code>的一种方案，不同于 JSON，其并不是一种数据交换格式，而只是一种绕过跨域的技巧</p>\n<h3 id=\"JSONP\"><a href=\"#JSONP\" class=\"headerlink\" title=\"JSONP\"></a>JSONP</h3><p>JSONP 的原理非常简单，为了克服跨域问题，<strong>利用没有跨域限制的 script 标签加载预设的 callback 将内容传递给 js</strong>。一般来说我们约定通过一个参数来告诉服务器 JSONP 返回时应该调用的回调函数名，然后拼接出对应的 js。已微博 API 为例，这个参数名是 _cb。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"JS数组操作方法1","slug":"JS数组操作方法1","date":"2016-10-10T22:35:32.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JS数组操作方法1.json","excerpt":"<h3 id=\"数组是JavaScript中常见的一个对象，它有一些经典的操作，比如数组的增、删、改、查。在这篇文章中主要整理这方面的相关操作方法。\"><a href=\"#数组是JavaScript中常见的一个对象，它有一些经典的操作，比如数组的增、删、改、查。在这篇文章中主要整理这方面的相关操作方法。\" class=\"headerlink\" title=\"数组是JavaScript中常见的一个对象，它有一些经典的操作，比如数组的增、删、改、查。在这篇文章中主要整理这方面的相关操作方法。\"></a>数组是JavaScript中常见的一个对象，它有一些经典的操作，比如数组的增、删、改、查。在这篇文章中主要整理这方面的相关操作方法。</h3>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"JS数组操作方法2","slug":"JS数组操作方法2","date":"2016-10-14T11:24:47.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JS数组操作方法2.json","excerpt":"<h4 id=\"JavaScript为操作已经包含在数组中的项提供了很多方法。比如push-、pop-、shift-和unshift-实现数组的增删操作、sort-和reverse-对数组项进行排序操作。今天学习操作数组的其他方法：concat-、slice-和splice-。\"><a href=\"#JavaScript为操作已经包含在数组中的项提供了很多方法。比如push-、pop-、shift-和unshift-实现数组的增删操作、sort-和reverse-对数组项进行排序操作。今天学习操作数组的其他方法：concat-、slice-和splice-。\" class=\"headerlink\" title=\"JavaScript为操作已经包含在数组中的项提供了很多方法。比如push()、pop()、shift()和unshift()实现数组的增删操作、sort()和reverse()对数组项进行排序操作。今天学习操作数组的其他方法：concat()、slice()和splice()。\"></a>JavaScript为操作已经包含在数组中的项提供了很多方法。比如push()、pop()、shift()和unshift()实现数组的增删操作、sort()和reverse()对数组项进行排序操作。今天学习操作数组的其他方法：concat()、slice()和splice()。</h4>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"JS语法特性试题","slug":"JS语法特性试题","date":"2016-07-02T16:19:33.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JS语法特性试题.json","excerpt":"<h4 id=\"看完了我的前一篇博文，很多人觉得自己学的很懂了，想来操练操练，看看自己究竟学的多扎实了-这不，我就搞来了13道题目，给各位试（打）炼（击）\"><a href=\"#看完了我的前一篇博文，很多人觉得自己学的很懂了，想来操练操练，看看自己究竟学的多扎实了-这不，我就搞来了13道题目，给各位试（打）炼（击）\" class=\"headerlink\" title=\"看完了我的前一篇博文，很多人觉得自己学的很懂了，想来操练操练，看看自己究竟学的多扎实了.这不，我就搞来了13道题目，给各位试（打）炼（击）\"></a>看完了我的前一篇博文，很多人觉得自己学的很懂了，想来操练操练，看看自己究竟学的多扎实了.这不，我就搞来了13道题目，给各位试（打）炼（击）</h4><p><del>我真的只是想来打击你的信心的</del></p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"},{"name":"面试题","path":"api/tags/面试题.json"}]},{"title":"JS的变量提升","slug":"JS的变量提升","date":"2017-01-04T05:26:49.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JS的变量提升.json","excerpt":"<p>很多面试题喜欢在函数执行这一块下功夫，作为 开发者如果不能很好滴 掌握js的执行原理，在面试过程中肯定会被秀的体无完肤，基于此我去找了变量提升相关内容，一起学习。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"},{"name":"面试题","path":"api/tags/面试题.json"}]},{"title":"JS面向对象基本知识","slug":"JS面向对象基本知识","date":"2016-07-15T16:21:44.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JS面向对象基本知识.json","excerpt":"<p>学习 <code>Javascript</code>，最难的地方是什么？个人觉得 就是<code>面对对象</code>这一块。对于初学者来说是<code>极为不友好</code>的一种 <code>编程思维方式</code>。这一篇博文我们讨论 <code>“封装”</code>，并会在之后再介绍学习<code>“继承”</code><br>首先确认一个概念，<code>“万物皆是对象”</code>，具有<code>“属性”</code>或者<code>“方法”</code>亦或者都具备。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"JS面向对象的5种写法","slug":"JS面向对象的5种写法","date":"2016-07-22T16:27:40.000Z","updated":"2017-06-29T01:14:13.564Z","comments":true,"path":"api/articles/JS面向对象的5种写法.json","excerpt":"<h3 id=\"简单介绍js-面向对象的5种写法，让你们更快对于对面对象的结构了解清楚。\"><a href=\"#简单介绍js-面向对象的5种写法，让你们更快对于对面对象的结构了解清楚。\" class=\"headerlink\" title=\"简单介绍js 面向对象的5种写法，让你们更快对于对面对象的结构了解清楚。\"></a>简单介绍js 面向对象的5种写法，让你们更快对于对面对象的结构了解清楚。</h3>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"JS面向对象面试题1","slug":"JS面向对象面试题1","date":"2016-06-30T16:17:01.000Z","updated":"2017-06-29T01:14:13.580Z","comments":true,"path":"api/articles/JS面向对象面试题1.json","excerpt":"<p>学习JS过程中，迷茫的我们会考虑研究一些面试题来测试自己对于这块知识是否真的搞懂了，在浏览过程中，看见歇一歇比较有代表性的js 问题，由于很容易让人轻视，所以能 全部答对的少之又少。让我们来瞧瞧这些题目吧！<br>题目：</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"},{"name":"面试题","path":"api/tags/面试题.json"}]},{"title":"React Native遇到的坑-持续更新","slug":"React-Native遇到的坑-持续更新","date":"2016-12-13T15:29:28.000Z","updated":"2017-06-29T01:14:13.580Z","comments":true,"path":"api/articles/React-Native遇到的坑-持续更新.json","excerpt":"<p>因为工作需要，需要用react-native去开发一款APP，在学习时间如此珍贵的前提下，竟然发生了N多开发前的准备问题。本博客适合小白遇到的问题，希望您与我交流。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"react native之环境搭建1","slug":"react-native之环境搭建1","date":"2016-12-03T05:23:27.000Z","updated":"2017-06-29T01:14:13.580Z","comments":true,"path":"api/articles/react-native之环境搭建1.json","excerpt":"<p>React Native 是facebook 旗下的一款开源项目，由于媲美原生的APP的性能(比当前native主流框架好很多),组件化编程，可以采用js(参考ES6语法)编写IOS与Android的APP，备受市场关注。支持热更新(可以绕过app store的审核机制),以及他的宣传“Learn once,write everywhere”看着都让人兴奋。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"react native之环境搭建2","slug":"react-native之环境搭建2","date":"2016-12-06T05:25:16.000Z","updated":"2017-06-29T01:14:13.580Z","comments":true,"path":"api/articles/react-native之环境搭建2.json","excerpt":"<h2 id=\"Window平台配置Android环境\"><a href=\"#Window平台配置Android环境\" class=\"headerlink\" title=\"Window平台配置Android环境\"></a>Window平台配置Android环境</h2><p>（本人以win10操作系统介绍，当前RN0.30.0）<br>内附安装包合集和详细安装指南，带你避开那些坑。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"关于console你不知道的事","slug":"关于console你不知道的事","date":"2016-06-23T16:08:14.000Z","updated":"2017-06-29T01:14:13.611Z","comments":true,"path":"api/articles/关于console你不知道的事.json","excerpt":"<h3 id=\"当我们开始接触前端这一行，对于谷歌浏览器的接触甚至多于与人的交流，对她的熟悉程度宛如自己的爱人。提及console，更是无人不知无人不晓。可是你知道么？console可以显示图片以及为文字加样式。\"><a href=\"#当我们开始接触前端这一行，对于谷歌浏览器的接触甚至多于与人的交流，对她的熟悉程度宛如自己的爱人。提及console，更是无人不知无人不晓。可是你知道么？console可以显示图片以及为文字加样式。\" class=\"headerlink\" title=\"当我们开始接触前端这一行，对于谷歌浏览器的接触甚至多于与人的交流，对她的熟悉程度宛如自己的爱人。提及console，更是无人不知无人不晓。可是你知道么？console可以显示图片以及为文字加样式。\"></a>当我们开始接触前端这一行，对于谷歌浏览器的接触甚至多于与人的交流，对她的熟悉程度宛如自己的爱人。提及console，更是无人不知无人不晓。可是你知道么？console可以显示图片以及为文字加样式。</h3><p><img src=\"http://7xjdah.com1.z0.glb.clouddn.com/pic2016051608.png\" alt=\"img\"></p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"},{"name":"浏览器","path":"api/tags/浏览器.json"}]},{"title":"关于console你不知道的事2","slug":"关于console你不知道的事2","date":"2016-06-27T16:11:20.000Z","updated":"2017-06-29T01:14:13.611Z","comments":true,"path":"api/articles/关于console你不知道的事2.json","excerpt":"<h3 id=\"Chrome的开发者工具已经强大到没朋友的地步了，特别是其功能丰富界面友好的console，使用得当可以有如下功效：\"><a href=\"#Chrome的开发者工具已经强大到没朋友的地步了，特别是其功能丰富界面友好的console，使用得当可以有如下功效：\" class=\"headerlink\" title=\"Chrome的开发者工具已经强大到没朋友的地步了，特别是其功能丰富界面友好的console，使用得当可以有如下功效：\"></a>Chrome的开发者工具已经强大到没朋友的地步了，特别是其功能丰富界面友好的console，使用得当可以有如下功效：</h3><ul>\n<li>更高「逼格」更快「开发调试」更强「进阶级的Frontender」</li>\n<li>Bug无处遁形「Console大法好」</li>\n</ul>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"},{"name":"浏览器","path":"api/tags/浏览器.json"}]},{"title":"原生js和jQ的区别","slug":"原生js和jQ的区别","date":"2016-06-29T01:12:31.000Z","updated":"2017-06-29T01:14:13.611Z","comments":true,"path":"api/articles/原生js和jQ的区别.json","excerpt":"<p>本篇博文 为大家列举一些常用的 原生js 和 jQ 的语法不一样的地方，以便小伙伴在运用过程中 灵活转换，方便学习开发。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"我在nodeJS遇到的坑","slug":"我在nodeJS遇到的坑","date":"2016-12-12T01:14:22.000Z","updated":"2017-06-29T01:14:13.611Z","comments":true,"path":"api/articles/我在nodeJS遇到的坑.json","excerpt":"<h3 id=\"天知道前端的学习-咋这么多坑，当你-发出“天哪，这么简单就解决了？”的时候，我想我们是否该整理一下-曾经因为二-犯下的错。-很多BUG是可以避免的\"><a href=\"#天知道前端的学习-咋这么多坑，当你-发出“天哪，这么简单就解决了？”的时候，我想我们是否该整理一下-曾经因为二-犯下的错。-很多BUG是可以避免的\" class=\"headerlink\" title=\"天知道前端的学习 咋这么多坑，当你 发出“天哪，这么简单就解决了？”的时候，我想我们是否该整理一下 曾经因为二 犯下的错。(很多BUG是可以避免的)\"></a>天知道前端的学习 咋这么多坑，当你 发出“天哪，这么简单就解决了？”的时候，我想我们是否该整理一下 曾经因为二 犯下的错。(很多BUG是可以避免的)</h3>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"时间戳timestamp与字符串输出转换","slug":"时间戳timestamp与字符串输出转换","date":"2017-02-20T08:37:22.000Z","updated":"2017-06-29T01:14:13.611Z","comments":true,"path":"api/articles/时间戳timestamp与字符串输出转换.json","excerpt":"<p>在前后端数据处理过程中，常常会和 时间戳打交道，并且 有规定格式去输出，为此 收集了一些常用的 timestamp的 输出，供大家参考</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]},{"title":"经典JS闭包分析","slug":"经典JS闭包分析","date":"2017-02-18T05:35:37.000Z","updated":"2017-06-29T01:14:13.611Z","comments":true,"path":"api/articles/经典JS闭包分析.json","excerpt":"<p>最近 ，在交流群里 有人提出了 一个问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">for (var i = 0; i &lt; 10; i++) &#123;</div><div class=\"line\">\tsetTimeout(function () &#123;</div><div class=\"line\">\t\tconsole.log(i)</div><div class=\"line\">\t&#125;,1000)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>记住你的答案，开始查看博客。</p>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"},{"name":"面试题","path":"api/tags/面试题.json"}]},{"title":"面向对象的继承问题","slug":"面向对象的继承问题","date":"2016-08-09T16:28:55.000Z","updated":"2017-06-29T01:14:13.627Z","comments":true,"path":"api/articles/面向对象的继承问题.json","excerpt":"<h4 id=\"面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例-，让您快速消化知识点。\"><a href=\"#面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例-，让您快速消化知识点。\" class=\"headerlink\" title=\"面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例 ，让您快速消化知识点。\"></a>面向对象比较重要的一环即为“对象的继承问题”，由于网络上类似的教程有很多，我直接举例 ，让您快速消化知识点。</h4>","keywords":null,"content":null,"raw":null,"categories":[],"tags":[{"name":"js","path":"api/tags/js.json"}]}]}